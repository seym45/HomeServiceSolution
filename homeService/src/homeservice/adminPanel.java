/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package homeservice;

import static homeservice.homePage.stmt;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MUKIT
 */
public class adminPanel extends javax.swing.JFrame {

    /**
     * Creates new form adminPanel
     */
    public adminPanel() {
        initComponents();
    }
    static Connection conn = null;
    static Statement stmt = null;

    public void createConnection() {
        try {
            //Connect conn = new Connect();
            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "test", "test");
            stmt = conn.createStatement();
        } catch (SQLException e) {
            System.err.println("Error at create connection " + e);
        }
    }

    public void fillTable(JTable table, String Query) {
        try {
            createConnection();
            //To remove previously added rows
            try (ResultSet rs = stmt.executeQuery(Query)) {
                //To remove previously added rows
                while (table.getRowCount() > 0) {
                    ((DefaultTableModel) table.getModel()).removeRow(0);
                }
                int columns = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] row = new Object[columns];
                    for (int i = 1; i <= columns; i++) {
                        row[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) table.getModel()).insertRow(rs.getRow() - 1, row);
                }
            }
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            System.err.println("SQL error at fill table\n" + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        navigation = new javax.swing.JPanel();
        finishOrder = new javax.swing.JButton();
        empReg = new javax.swing.JButton();
        pendingOrderBtn = new javax.swing.JButton();
        view = new javax.swing.JPanel();
        PendingOrder = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingTbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        orderNoCombo = new javax.swing.JComboBox<String>();
        empCombo = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        FinishedOrder = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        finishTbl = new javax.swing.JTable();
        viewLabel = new javax.swing.JLabel();
        backgroungImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(720, 440));
        getContentPane().setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeservice/homeTopimg.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 700, 100);

        navigation.setBackground(new java.awt.Color(51, 51, 51));

        finishOrder.setText("Fnished Order");
        finishOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishOrderActionPerformed(evt);
            }
        });

        empReg.setText("Employee Reg");
        empReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empRegActionPerformed(evt);
            }
        });

        pendingOrderBtn.setText("Pending Order");
        pendingOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingOrderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navigationLayout = new javax.swing.GroupLayout(navigation);
        navigation.setLayout(navigationLayout);
        navigationLayout.setHorizontalGroup(
            navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navigationLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pendingOrderBtn)
                    .addGroup(navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(empReg)
                        .addComponent(finishOrder)))
                .addGap(32, 32, 32))
        );
        navigationLayout.setVerticalGroup(
            navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(pendingOrderBtn)
                .addGap(18, 18, 18)
                .addComponent(finishOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(empReg)
                .addGap(53, 53, 53))
        );

        getContentPane().add(navigation);
        navigation.setBounds(0, 110, 190, 290);

        view.setLayout(new java.awt.CardLayout());

        PendingOrder.setLayout(null);

        pendingTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Name", "Service", "Status"
            }
        ));
        jScrollPane1.setViewportView(pendingTbl);

        PendingOrder.add(jScrollPane1);
        jScrollPane1.setBounds(30, 20, 440, 140);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Assign Emplyee");

        jLabel4.setText("Order No");

        jLabel5.setText("Employee");

        jButton4.setText("Assign");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        orderNoCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                orderNoComboItemStateChanged(evt);
            }
        });
        orderNoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderNoComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(empCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(orderNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(orderNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(empCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(33, 33, 33))))
        );

        PendingOrder.add(jPanel1);
        jPanel1.setBounds(80, 170, 340, 120);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeservice/adminbac.jpg"))); // NOI18N
        PendingOrder.add(jLabel2);
        jLabel2.setBounds(0, 0, 524, 300);

        view.add(PendingOrder, "card2");

        FinishedOrder.setLayout(null);

        finishTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Name", "Assigned Emplyee", "Satus"
            }
        ));
        jScrollPane2.setViewportView(finishTbl);

        FinishedOrder.add(jScrollPane2);
        jScrollPane2.setBounds(40, 70, 460, 150);

        viewLabel.setBackground(new java.awt.Color(255, 255, 255));
        viewLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        viewLabel.setForeground(new java.awt.Color(255, 255, 255));
        viewLabel.setText("Finished Order Summary");
        FinishedOrder.add(viewLabel);
        viewLabel.setBounds(160, 20, 230, 40);

        backgroungImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeservice/adminbac.jpg"))); // NOI18N
        FinishedOrder.add(backgroungImg);
        backgroungImg.setBounds(14, 10, 510, 290);

        view.add(FinishedOrder, "card2");

        getContentPane().add(view);
        view.setBounds(180, 100, 520, 300);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void pendingOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingOrderBtnActionPerformed
        // TODO add your handling code here:
        String qr = "select trans_id,cus_id, status, service from transaction where status = 'No'";
        fillTable(pendingTbl, qr);

        try {
            createConnection();
            ResultSet rs;
            qr = "select trans_id from transaction where status = 'No'";

            rs = stmt.executeQuery(qr);
            while (rs.next()) {
                orderNoCombo.addItem(rs.getString("trans_id"));
            }
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex + "gfg");
        }
        view.removeAll();
        view.repaint();
        view.revalidate();

        view.add(PendingOrder);
        view.repaint();
        view.revalidate();


    }//GEN-LAST:event_pendingOrderBtnActionPerformed

    private void orderNoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderNoComboActionPerformed
        // TODO add your handling code here:
        empCombo.removeAllItems();
        String x = String.valueOf(orderNoCombo.getSelectedItem());
        try {
            createConnection();
            String qr = "select name from emp_hs where SERVICE_CHILD = (select service from transaction where trans_id = " + x + ")";
            ResultSet rs = stmt.executeQuery(qr);

            while (rs.next()) {
                empCombo.addItem(rs.getString("name"));
            }

            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_orderNoComboActionPerformed

    private void orderNoComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_orderNoComboItemStateChanged

    }//GEN-LAST:event_orderNoComboItemStateChanged

    private void empRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empRegActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new employeeRegister().setVisible(true);

    }//GEN-LAST:event_empRegActionPerformed

    private void finishOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishOrderActionPerformed
        // TODO add your handling code here:
        view.removeAll();
        view.repaint();
        view.revalidate();

        view.add(FinishedOrder);
        view.repaint();
        view.revalidate();
        
        
        fillTable(finishTbl, "select trans_id, cus_id, emp_name, Status from transaction where status = 'YES'");
    }//GEN-LAST:event_finishOrderActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String empName = String.valueOf(empCombo.getSelectedItem());
        String tid = String.valueOf(orderNoCombo.getSelectedItem());

        try {
            createConnection();
            //   String qr = "select name from emp_hs where SERVICE_CHILD = (select service from transaction where trans_id = " + x + ")";
            String qr = "select * from TRANSACTION where trans_id =" + tid;
            ResultSet rsALL = stmt.executeQuery(qr);
            Statement delStatement = conn.createStatement();
            delStatement.executeQuery("delete from TRANSACTION where trans_id =" + tid);
            Statement stmtNew = conn.createStatement();
            while (rsALL.next()) {
                stmtNew.executeQuery("insert into TRANSACTION (TRANS_ID, AMOUNT,CUS_ID, STATUS,SERVICE, EMP_NAME) "
                        + "values(" + tid + "," + rsALL.getInt("AMOUNT") + ",1," + "'YES' , '" + rsALL.getString("service") + "' ,'" + empName + "')");
            }
            

            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FinishedOrder;
    private javax.swing.JPanel PendingOrder;
    private javax.swing.JLabel backgroungImg;
    private javax.swing.JComboBox<String> empCombo;
    private javax.swing.JButton empReg;
    private javax.swing.JButton finishOrder;
    private javax.swing.JTable finishTbl;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel navigation;
    private javax.swing.JComboBox<String> orderNoCombo;
    private javax.swing.JButton pendingOrderBtn;
    private javax.swing.JTable pendingTbl;
    private javax.swing.JPanel view;
    private javax.swing.JLabel viewLabel;
    // End of variables declaration//GEN-END:variables
}
